@model  Rkna_Project.Models.States_Table

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<br />

<br />

<h2> New City</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Governorate Name", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    <select class="form-control" id="Gov_ID" name="Gov_ID" required="required">
                        @{ foreach (var item in ViewBag.Governorate_Table as List<Rkna_Project.Models.Governorate_Table>)
                            {

                                <option value="@item.Gov_ID">@item.Gov_Name</option>
                            }
                        }
                    </select>
                    <br />
                    @Html.ValidationMessageFor(model => model.Governorate_Table.Gov_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.States_Name, "State Name", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.States_Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    <br />

                    @Html.ValidationMessageFor(model => model.States_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.States_Desc, "State Description", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.States_Desc, new { htmlAttributes = new { @class = "form-control" } })
                    <br />

                    @Html.ValidationMessageFor(model => model.States_Desc, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div id="map_canvas" style="height: 400px;"></div>
            </div>

            <div class="form-group">
                @Html.Label("Address", htmlAttributes: new { id = "address", @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.Editor(" ", new { htmlAttributes = new { id = "address", @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.States_X_Point, "Longitude", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.States_X_Point, new { htmlAttributes = new { id = "Longitude", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.States_X_Point, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.States_Y_Point, "Latitude", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.States_Y_Point, new { htmlAttributes = new { id = "Latitude", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.States_Y_Point, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <br />
    <br />

   
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save"  class="btn btn-outline-info btn-rounded" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary btn-rounded btn-large" })
        </div>
    </div>
   
   

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDWTHLiTeCJ8YVPGdMkZEPXzo_6FeuRwHE&sensor=true"></script>
        <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
        <script type="text/javascript" src="@Url.Content("~/Scripts/Site.js")"></script>
    }
}